name: Release & Publish

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

        # 1. Install pnpm before Node
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10 # change if you use a different pnpm version
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24
          registry-url: https://registry.npmjs.org/

      - name: Install dependencies
        run: pnpm install
        env:
          CI: true

      - name: Build package
        run: pnpm build

      - name: Determine npm tag
        id: npm-tag
        run: |
          VERSION="${GITHUB_REF#refs/tags/}"
          if [[ "$VERSION" == *"-alpha"* ]]; then
            echo "tag=alpha" >> $GITHUB_OUTPUT
          elif [[ "$VERSION" == *"-beta"* ]]; then
            echo "tag=beta" >> $GITHUB_OUTPUT
          else
            echo "tag=latest" >> $GITHUB_OUTPUT
          fi

      - name: Publish to npm
        run: npm publish --access public --tag ${{ steps.npm-tag.outputs.tag }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Generate release notes
        id: notes
        uses: actions/github-script@v7
        with:
          script: |
            const { data: releaseNotes } = await github.rest.repos.generateReleaseNotes({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: context.ref.replace("refs/tags/", ""),
            });
            core.setOutput("body", releaseNotes.body);

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: ${{ steps.notes.outputs.body }}
